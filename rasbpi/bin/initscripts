#!/bin/sh

LOG="/tmp/initscripts.log"
SELF="$0"

function log() {
	local string=$1
	local append=${2:-1}
	local now=$(date "+[%H:%M:%S.%4N]")

	if check_arg "$append"; then
		echo "$now $string" >> "$LOG"
	else
		echo "$now $string" > "$LOG"
	fi
}

function check_arg() {
	[[ -n "$1" && "$1" -ne 0 ]]
}

function wait_kill() {
	local grep_command=$1
	local kill_command=$2
	local sleep_time=${3:-0.5s}
	local retry_limit=${4:-3}

	local counter=0

	log "Killing \"$kill_command\" (search by \"$grep_command\")..."
	while eval "$grep_command"; do
		if [[ $counter -gt $retry_limit ]]; then
			log "Could not kill $command"
			return -1
		fi

		eval "$kill_command"

		counter=$(($counter + 1))
	done
		
	if [[ $counter -gt 0 ]]; then
		log "Killing took $counter tries"
	fi

	return $counter
}

function prepare_base_kill_command() {
	local search=${1:-$command}

	local full=${2:-1}
	local exact=${3:-1}

	local base_command="\"$search\""
	if check_arg "$full"; then
		base_command="$base_command -f"
	fi
	if check_arg "$exact"; then
		base_command="$base_command -x"
	fi

	printf '%s\n' "$base_command"
}

function kill_run() {
	local command=$1
	local search=${2:-$command}

	local full=${3:-1}
	local exact=${4:-1}
	local keep_old=${5:-0}

	log "kill_run $command ($search) [${full}${exact}${keep_old}]"

	local base_command=$(prepare_base_kill_command "$search" "$full" "$exact")
	local kill_command="pkill $base_command"
	local grep_command="pgrep $base_command"

	if check_arg "$keep_old"; then
		if eval "$grep_command" > /dev/null; then
			log "Command $command already running"
			return 0
		fi
	fi

	# Wait until the processes have been shut down
	wait_kill "$grep_command" "$kill_command"
	if [[ $? -lt 0 ]]; then
		return -1
	fi

	log "Executing $command..."
	eval "$command"
}

function main() {
	if [[ $# -gt 0 ]]; then
		case "$1" in
			statusbar)
				kill_run waybar
			;;

			xdg_dir)
				if [ -z "$XDG_RUNTIME_DIR" ]; then
					uid=$(id -u)
					export XDG_RUNTIME_DIR="/tmp/$uid-runtime-dir"
					echo "Exporting XDG_RUNTIME_DIR=$XDG_RUNTIME_DIR"
					if ! [ -d "$XDG_RUNTIME_DIR" ]; then
						mkdir $XDG_RUNTIME_DIR
						chmod 0700 $XDG_RUNTIME_DIR
					fi
				fi
			;;
		esac
	fi
}

main "$@"
