#!/usr/bin/bash

# xrandr will output modes line by line
# the mode that is selected will have an asterisk next to one of it's refresh rates
# grep filters out that one line with the asterisk
# awk then takes the first piece of non-space text it finds, which is the resolution
# read then splits it by 'x'

RES_X=0
RES_Y=0
get_resolution() {
	local IFS='x'
	read RES_X RES_Y <<< $(xrandr --query | grep \* | awk -F ' ' '{ print $1 }')
}
get_resolution

# defaults
anchor="topleft"
xoffset=10
yoffset=10
width=300
height=100
sticky=0
class=''

function help() {
	echo "stickywindow:
	-h --help			show this help
	-a --anchor value	anchor side: topleft, topright, bottomleft, bottomright, center (default: topleft)
	-x --xoffset value	the x offset from the anchor (default: 10)
	-y --yoffset value	the y offset from the anchor (default: 10)
	-w --width value	window width (default: 300)
	-h --height value	window height (default: 100)
	-s --sticky			make the window sticky
	-c --class value	window class to select (default: none)
	"
}

function do_thing() {
	local x_pos=$xoffset
	local y_pos=$yoffset
	case "$anchor" in
		# topleft) nothing to do here
		topright)
			x_pos=$(($RES_X - $xoffset - $width))
		;;

		bottomleft)
			y_pos=$(($RES_Y - $yoffset - $height))
		;;
		bottomright)
			x_pos=$(($RES_X - $xoffset - $width))
			y_pos=$(($RES_Y - $yoffset - $height))
		;;

		center)
			x_pos=$(($RES_X / 2 - $width / 2))
			y_pos=$(($RES_Y / 2 - $height / 2))
		;;
	esac

	local args="floating enable;"
	if [ -n "$class" ]; then 
		args="[class=\"$class\"] focus; $args"
	fi

	if [ $sticky -ne 0 ]; then
		args="$args sticky enable;"
	fi

	args="$args resize set $width $height; move absolute position $x_pos $y_pos"
	i3-msg "$args"
}

# As long as there is at least one more argument, keep looping
while [[ $# -gt 0 ]]; do
    key="$1"
    case "$key" in
        --help)
			help
			exit 0
        ;;

		-a|--anchor)
        	shift
			anchor="$1"
        ;;

		-x|--xoffset)
        	shift
			xoffset="$1"
        ;;

		-y|--yoffset)
        	shift
			yoffset="$1"
        ;;

		-w|--width)
        	shift
			width="$1"
        ;;

		-h|--height)
        	shift
			height="$1"
        ;;

        -s|--sticky)
			sticky=1
        ;;

        -c|--class)
        	shift
			class="$1"
        ;;

        *)
        	echo "Unknown option \"$key\""
        ;;
    esac
    # Shift after checking all the cases to get the next option
    shift
done

do_thing